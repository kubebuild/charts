apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "api.fullname" . }}
  labels:
    app: {{ template "api.name" . }}
    chart: {{ template "api.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "api.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "api.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "api.fullname" . }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [sh, -c]
          args: ["export POD_A_RECORD=$(echo $MY_POD_IP | sed 's/./-/g')i && bin/kube_api foreground"]
          env:
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          envFrom:
          - configMapRef:
              name: {{ template "api.fullname" . }}
          ports:
            - name: http
              containerPort: {{ .Values.app.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.app.healthPath }}
              port: http
            initialDelaySeconds: 30
            periodSeconds: 1
          readinessProbe:
            httpGet:
              path: {{ .Values.app.healthPath }}
              port: http
            initialDelaySeconds: 30
            periodSeconds: 1
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.dbInstance }}=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          # [START cloudsql_security_context]
          readinessProbe:
            exec:
              command: ["nc", "-z", "127.0.0.1", "5432"]
          livenessProbe:
            exec:
              command: ["nc", "-z", "127.0.0.1", "5432"]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          # [END cloudsql_security_context]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
